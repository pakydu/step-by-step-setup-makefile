# to build the ApplicationServices

include $(BASE)/rule.make

PROJECT:=ApplicationServices
PROJECT_MAP:=$(PROJECT).map
PROJECT_TARGET:=$(PROJECT)
PROJECT_DESTINATION:=$(ROOT_PART)/opt/ApplicationServices/

PROJECT_CFLAGS=$(CFLAGS) -Wextra -DXTYPE_32BIT \
		-D_POSIX_C_SOURCE=200112L -DXM_ANSI_FLOAT \
		-DMTYPE_32BIT -DSAL_BLD  
PROJECT_IFLAGS=$(IFLAGS) \
		-I../bacnet \
		-I../shared_include \
		-I../AppUtilities/POSIX \
		-I$(BASE)/source/libPlatform \
		-I$(BASE)/source/LibWatchdog \
		-I$(BASE)/source/common/LibG4 \
		-I$(BASE)/3rd_party_sw/libBACnetStack/ \
		-I.
PROJECT_LFLAGS=$(LDFLAGS) -L../ \
		-L../AppUtilities \
		-L../G4AppLib \
		-lG4AppLib \
		-lWebSrvCfgMgr \
		-lAdvServices \
		-lMonitoring \
		-lPersistentStore \
		-lMarkupSTL \
		-lPlatform \
		-lG4 \
		-lXalg \
		-lG4AppUtilities \
		-ldbus-1 \
		-lglib-2.0 \
		-lxls \
		-ltdb \
		-lrt \
		-lcrypto \
		-lpthread \
		-lJsonObjects \
		-lWatchdog \
		-lSerialManager \
		-lBACnetStack  \
		-lADF  \
		-lSStimer\
		-luibecpp \
		-lsslogd \
		-luuid \
		-lblkid \
		-lBackRest \
		-ltar


PROJECT_HEADER:=$(wildcard *.h)
PROJECT_SOURCE:=$(wildcard *.c)
PROJECT_DEPEND:=$(patsubst %.c,%.o,$(wildcard *.c))

all: $(PROJECT_TARGET)
	@echo -e "INSTALL - $(PROJECT_TARGET)\nINSTALL - $(PROJECT_MAP)"
	@mkdir -p $(PROJECT_DESTINATION)
	@cp -f $(PROJECT_TARGET) $(PROJECT_DESTINATION)
	@cp -rf ../Distribution/* $(PROJECT_DESTINATION)
	@chmod -R 0755 $(PROJECT_DESTINATION)
	@mkdir -p $(MAP_FILE_PATH)
	@cp -f $(PROJECT_MAP) $(MAP_FILE_PATH)

$(PROJECT_TARGET): $(PROJECT_DEPEND) ../G4AppLib/libG4AppLib.a
	@echo "Building target - $@"
	$(CPP) $^ -o $@ $(PROJECT_LFLAGS)

%.o:%.c
	@echo "CC [C] - $@"
	$(CC) $(PROJECT_CFLAGS) $(PROJECT_IFLAGS) -c -o $@ $<

clean:
	@find ./ \( -name "*.o" -o -name "*.d" \) -exec rm -f '{}' \;
	@rm -f $(PROJECT_MAP) $(PROJECT_TARGET)

-include $(PROJECT_DEPEND:.o=.d)
