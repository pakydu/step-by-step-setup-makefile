# to build the libSerialManager

include $(BASE)/rule.make

PROJECT:=libSerialManager
PROJECT_MAP:=$(PROJECT).map
PROJECT_TARGET:=$(PROJECT).so
PROJECT_DESTINATION:=$(ROOT_PART)/usr/lib/

PROJECT_CFLAGS=$(CFLAGS) -fPIC -Wno-deprecated -DXTYPE_32BIT -DXM_ANSI_FLOAT -DMTYPE_32BIT  
PROJECT_IFLAGS=$(IFLAGS) \
	-I$(BASE)/source/common/LibG4 \
	-I$(BASE)/source/LibWatchdog \
	-I$(BASE)/source/Libsslogd \
	-I$(BASE)/3rd_party_sw/libJsonObjects \
	-I$(BASE)/G4_app_small/shared_include \
	-I$(BASE)/source/SS_local_time/libSStimer \
	-I$(BASE)/3rd_party_sw/libBACnetStack/ \
	-I$(BASE)/source/libPlatform/ \
	-I$(BASE)/G4_app_small/AppUtilities/ \
	-I./comm \
	-I./hw \
	-I./log \
	-I./msg \
	-I./statistics \
	-I./thread \
	-I./trace \
	-I./utility \
	-I./test \
	-I./helper \
	-I.

PROJECT_LFLAGS=$(LDFLAGS) -shared -lsslogd -lffi -ldbus-glib-1 -ltdb -lrt -lSStimer -lBACnetStack -lPlatform -lG4AppUtilities

PROJECT_SOURCE_C:=$(wildcard ./hw/*.c) \

PROJECT_SOURCE_CPP:=$(wildcard ./comm/*.cpp) \
		$(wildcard ./hw/*.cpp) \
		$(wildcard ./log/*.cpp) \
		$(wildcard ./msg/*.cpp) \
		$(wildcard ./statistics/*.cpp) \
		$(wildcard ./test/*.cpp) \
		$(wildcard ./thread/*.cpp) \
		$(wildcard ./trace/*.cpp) \
		$(wildcard ./utility/*.cpp) \
		$(wildcard ./helper/*.cpp) \
		$(wildcard *.cpp)

PROJECT_DEPEND:=$(patsubst %.c,%.o,$(PROJECT_SOURCE_C)) $(patsubst %.cpp,%.o,$(PROJECT_SOURCE_CPP))

all: $(PROJECT_TARGET)
	@echo -e "INSTALL - $(PROJECT_TARGET)\nINSTALL - $(PROJECT_MAP)"
	@mkdir -p $(PROJECT_DESTINATION)
	@cp -f $(PROJECT_TARGET) $(PROJECT_DESTINATION)
	@mkdir -p $(MAP_FILE_PATH)
	@cp -f $(PROJECT_MAP) $(MAP_FILE_PATH)

$(PROJECT_TARGET): $(PROJECT_DEPEND)
	@echo "Building target - $@"
	$(CPP) -o $@ $^ $(PROJECT_LFLAGS)

%.o:%.c
	@echo "CPP [C] - $@"
	$(CC) $(PROJECT_CFLAGS) $(PROJECT_IFLAGS) -std=gnu99 -c -o $@ $<

%.o:%.cpp
	@echo "CPP [C] - $@"
	$(CPP) $(PROJECT_CFLAGS) $(PROJECT_IFLAGS) -c -o $@ $<

clean:
	@find ./ \( -name "*.o" -o -name "*.d" \) -exec rm -f '{}' \;
	@rm -f $(PROJECT_MAP) $(PROJECT_TARGET)

-include $(PROJECT_DEPEND:.o=.d)
